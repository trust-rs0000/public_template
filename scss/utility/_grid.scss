@use "../forward" as *;

// グリッドシステム

@for $col from 1 through 12 {
  @each $dimension, $breakpoint in $breakpoints {
    $infix: if($breakpoint == 0px, null, -#{$dimension});

    // フレックスボックス
    .flexbox#{$infix}-#{$col} {
      --gutter-x: 0px;
      --gutter-y: 0px;

      display: flex;
      flex-wrap: wrap;
      margin-bottom: calc(var(--gutter-y) * -1);

      @include media-min($dimension) {
        & > * {
          @include flex(--gutter-x, --gutter-y, $col);
        }
      }
    }

    // blogブロック・グリッドシステム
    .blog#{$infix}-#{$col} {
      --gutter-x: 0px;
      --gutter-y: 0px;

      margin-bottom: calc(var(--gutter-y) * -1);

      .blog_list {
        flex-wrap: wrap;
        flex-direction: row;
      }

      @include media-min($dimension) {
        .blog_list > div {
          @include flex(--gutter-x, --gutter-y, $col);
        }
      }
    }

    // snsブロック・グリッドシステム
    .sns#{$infix}-#{$col} {
      --gutter-x: 0px;
      --gutter-y: 0px;

      margin-bottom: calc(var(--gutter-y) * -1);

      .sns_list {
        flex-wrap: wrap;
        flex-direction: row;
      }

      @include media-min($dimension) {
        .sns_list > div {
          @include flex(--gutter-x, --gutter-y, $col);
        }
      }
    }
  }
}

// gap
@for $col from 1 through 24 {
  @each $dimension, $breakpoint in $breakpoints {
    $infix: if($breakpoint == 0px, null, -#{$dimension});

    .g#{$infix}-#{$col} {
      @include media-min($dimension) {
        --gutter-x: calc(5px * #{$col});
        --gutter-y: calc(5px * #{$col});

        margin-bottom: calc(-5px * #{$col}) !important;
      }
    }

    .gx#{$infix}-#{$col} {
      @include media-min($dimension) {
        --gutter-x: calc(5px * #{$col});
      }
    }

    .gy#{$infix}-#{$col} {
      @include media-min($dimension) {
        --gutter-y: calc(8px * #{$col});

        margin-bottom: calc(-8px * #{$col}) !important;
      }
    }
  }
}

$align: (
  start: flex-start,
  center: center,
  end: flex-end,
  between: space-between,
);

@each $key, $value in $align {
  .align-items-#{$key} {
    align-items: $value;
  }
}

$justify-content: (
  start: flex-start,
  center: center,
  end: flex-end,
  between: space-between,
);

@each $key, $value in $justify-content {
  .justify-content-#{$key} {
    justify-content: $value;
  }
}
